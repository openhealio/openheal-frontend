"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/inbodyS10";
exports.ids = ["pages/api/inbodyS10"];
exports.modules = {

/***/ "canvas":
/*!*************************!*\
  !*** external "canvas" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("canvas");

/***/ }),

/***/ "pdf-lib":
/*!**************************!*\
  !*** external "pdf-lib" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("pdf-lib");

/***/ }),

/***/ "(api)/./classes/bioimpedance/BioReport.tsx":
/*!********************************************!*\
  !*** ./classes/bioimpedance/BioReport.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BioReport)\n/* harmony export */ });\n/* harmony import */ var canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! canvas */ \"canvas\");\n/* harmony import */ var canvas__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(canvas__WEBPACK_IMPORTED_MODULE_0__);\n\nclass BioReport {\n    constructor(bioimpedance, language, name){\n        this.bioimpedance = bioimpedance;\n        this.language = language;\n        this.name = name;\n        //Categorical\n        this.cat_icw = Number(this.bioimpedance.icw) < Number(this.bioimpedance.icw_min) ? \"under_bad\" : Number(this.bioimpedance.icw) > Number(this.bioimpedance.icw_max) ? \"over_bad\" : \"normal\";\n        this.cat_ecw = Number(this.bioimpedance.ecw) < Number(this.bioimpedance.ecw_min) ? \"under_bad\" : Number(this.bioimpedance.ecw) > Number(this.bioimpedance.ecw_max) ? \"over_bad\" : \"normal\";\n        this.cat_protein = Number(this.bioimpedance.protein) < Number(this.bioimpedance.protein_min) ? \"under_bad\" : Number(this.bioimpedance.protein) > Number(this.bioimpedance.protein_max) ? \"over_good\" : \"normal\";\n        this.cat_mineral = Number(this.bioimpedance.mineral) < Number(this.bioimpedance.mineral_min) ? \"under_bad\" : Number(this.bioimpedance.mineral) > Number(this.bioimpedance.mineral_max) ? \"over_good\" : \"normal\";\n        this.cat_weight = Number(this.bioimpedance.weight) < Number(this.bioimpedance.weight_min) ? \"under_bad\" : Number(this.bioimpedance.weight) > Number(this.bioimpedance.weight_max) ? \"over_bad\" : \"normal\";\n        this.cat_smm = Number(this.bioimpedance.smm_skeletal_muscle_mass) < Number(this.bioimpedance.smm_min) ? \"under_bad\" : Number(this.bioimpedance.smm_skeletal_muscle_mass) > Number(this.bioimpedance.smm_max) ? \"over_good\" : \"normal\";\n        this.cat_ffm = Number(this.bioimpedance.ffm_fat_free_mass) < Number(this.bioimpedance.ffm_min) ? \"under_bad\" : Number(this.bioimpedance.ffm_fat_free_mass) > Number(this.bioimpedance.ffm_max) ? \"over_good\" : \"normal\";\n        this.cat_pbf = Number(this.bioimpedance.pbf_percent_body_fat) < Number(this.bioimpedance.pbf_min) ? \"under_bad\" : Number(this.bioimpedance.pbf_percent_body_fat) > Number(this.bioimpedance.pbf_max) ? \"over_bad\" : \"normal\";\n        this.cat_fat = Number(this.bioimpedance.fat) < Number(this.bioimpedance.fat_min) ? \"under_bad\" : Number(this.bioimpedance.fat) > Number(this.bioimpedance.fat_max) ? \"over_bad\" : \"normal\";\n        this.cat_bmi = Number(this.bioimpedance.bmi) < Number(this.bioimpedance.bmi_min) ? \"under_bad\" : Number(this.bioimpedance.bmi) > Number(this.bioimpedance.bmi_max) ? \"over_bad\" : \"normal\";\n        this.cat_segmental_lean_ra = Number(this.bioimpedance.segmental_lean_ra) < Number(this.bioimpedance.segmental_lean_ra_min) ? \"under_bad\" : Number(this.bioimpedance.segmental_lean_ra) > Number(this.bioimpedance.segmental_lean_ra_max) ? \"over_good\" : \"normal\";\n        this.cat_segmental_lean_la = Number(this.bioimpedance.segmental_lean_la) < Number(this.bioimpedance.segmental_lean_la_min) ? \"under_bad\" : Number(this.bioimpedance.segmental_lean_la) > Number(this.bioimpedance.segmental_lean_la_max) ? \"over_good\" : \"normal\";\n        this.cat_segmental_lean_tr = Number(this.bioimpedance.segmental_lean_tr) < Number(this.bioimpedance.segmental_lean_tr_min) ? \"under_bad\" : Number(this.bioimpedance.segmental_lean_tr) > Number(this.bioimpedance.segmental_lean_tr_max) ? \"over_good\" : \"normal\";\n        this.cat_segmental_lean_rl = Number(this.bioimpedance.segmental_lean_rl) < Number(this.bioimpedance.segmental_lean_rl_min) ? \"under_bad\" : Number(this.bioimpedance.segmental_lean_rl) > Number(this.bioimpedance.segmental_lean_rl_max) ? \"over_good\" : \"normal\";\n        this.cat_segmental_lean_ll = Number(this.bioimpedance.segmental_lean_ll) < Number(this.bioimpedance.segmental_lean_ll_min) ? \"under_bad\" : Number(this.bioimpedance.segmental_lean_ll) > Number(this.bioimpedance.segmental_lean_ll_max) ? \"over_good\" : \"normal\";\n    }\n    getTexts() {\n        const options = {\n            \"pt\": [\n                `Circunerência da cintura estimada pela bioimpedância - ${this.bioimpedance.waist_cir} cm`,\n                `-------`,\n                `Água Corporal Total - ${this.bioimpedance.tbw_total_body_water} litros (esperado de ${this.bioimpedance.tbw_min} a ${this.bioimpedance.tbw_max} litros)`,\n                `É o volume total de água no corpo. A soma da água intracelular e extracelular.`,\n                `Água Extracelular - É a quantidade de água ora das células`,\n                `Água Intracelular - É a quantidade de água dentro das células`,\n                `-------`,\n                `Músculo Esquelético - A massa de músculo esquelético é computada baseada na massa de músculos dos membros, que é quase toda`,\n                `composta de músculo esquelético e é cerca de 70% da quantidade de músculo do corpo inteiro.`,\n                `-------`,\n                `Índice de edema - ${this.bioimpedance.ecw_tbw_total}`,\n                `A medida da quantidade de água intracelular e extracelular separadamente permite a avaliação do balanço dos níveis de água.`,\n                `A taxa (água extracelular / água corporal total) pode ser avaliada não somente em cada parte do corpo, mas também no corpo inteiro.`,\n                `Pessoas saudáveis se mantem em certo equilíbrio entre os compartimentos intra e extracelular com relação a quantidade de agua.`,\n                `No entanto, se a quantidade de agua no compartimento extracelular se eleva, poderá ocorrer edema.`,\n                `A taxa normal para ECW/TBW (índice de edema) é considerada 0.36 a 0.39.`,\n                `Valores entre 0.39 e 0.40 signiica edema leve e acima de 0.40 edema.`,\n                `Índice de edema = água extracelular / água corporal total`,\n                `-----`,\n                `Parâmetros Nutricionais`,\n                `Taxa metabólica basal - ${this.bioimpedance.bmr} Kcal nas 24 horas`,\n                `Massa Celular Corporal - ${this.bioimpedance.body_cell_mass} Kg (esperado de ${this.bioimpedance.bcm_min} a ${this.bioimpedance.bcm_max} Kg)`,\n                `Área de gordura viceral - ${this.bioimpedance.vfa} cm2`,\n                `A gordura no corpo é dividida em categorias dependendo da localização da gordura: gordura viceral, gordura subcutânea e a gordura entre`,\n                `os músculos. Um individuo com uma área de gordura viceral maior que 100cm2 é considerado ser abdominalmente obeso do compartimento`,\n                `da gordura viceral.`,\n                \"-----\"\n            ]\n        };\n        return options[this.language];\n    }\n    getColor(str) {\n        const options = {\n            \"std\": `black`,\n            \"normal\": `green`,\n            \"under_bad\": `red`,\n            \"under_good\": `blue`,\n            \"over_bad\": `red`,\n            \"over_good\": `blue`\n        };\n        return options[str] // error is because there is no option\n        ;\n    }\n    getBars(string) {\n        const bars = {\n            \"under\": \"|-----|\",\n            \"normal\": \"|-------------------------|\",\n            \"over\": \"|-------------------------------------------|\"\n        };\n        const options = {\n            \"std\": \"\",\n            \"normal\": bars[\"normal\"],\n            \"under_bad\": bars[\"under\"],\n            \"over_bad\": bars[\"over\"],\n            \"under_good\": bars[\"under\"],\n            \"over_good\": bars[\"over\"]\n        };\n        return options[string] // error is because there is no option\n        ;\n    }\n    getCanvas(width, height) {\n        const positions = {\n            \"relLines_old\": [\n                0.037,\n                0.0815,\n                0.1,\n                0.16,\n                0.18,\n                0.1975,\n                0.215,\n                0.2325,\n                0.297,\n                0.322,\n                0.347,\n                0.372,\n                0.397,\n                0.46,\n                0.482,\n                0.506,\n                0.529,\n                0.553\n            ],\n            \"relLines\": [\n                0.058,\n                0.0895,\n                0.108,\n                0.168,\n                0.188,\n                0.2055,\n                0.223,\n                0.2405,\n                0.305,\n                0.33,\n                0.355,\n                0.38,\n                0.401,\n                0.468,\n                0.49,\n                0.514,\n                0.537,\n                0.561\n            ],\n            \"relLinesTxt\": [\n                0.59,\n                0.60,\n                0.61,\n                0.62,\n                0.63,\n                0.64,\n                0.65,\n                0.66,\n                0.67,\n                0.68,\n                0.69,\n                0.7,\n                0.71,\n                0.72,\n                0.73,\n                0.74,\n                0.75,\n                0.76,\n                0.77,\n                0.78,\n                0.79,\n                0.80,\n                0.81,\n                0.82,\n                0.83,\n                0.84,\n                0.85,\n                0.86,\n                0.87,\n                0.88,\n                0.89,\n                0.90,\n                0.91,\n                0.92,\n                0.93,\n                0.94\n            ],\n            \"relColumn0\": [\n                0.25\n            ],\n            \"relColumn1\": [\n                0.1,\n                0.32,\n                0.5\n            ],\n            \"relColumn2\": [\n                0.22,\n                0.3,\n                0.380,\n                0.61,\n                0.71,\n                0.8,\n                0.9\n            ],\n            \"relColumnBar\": [\n                0.49\n            ],\n            \"relColumnTxt\": [\n                0.05\n            ]\n        };\n        const dir = \"/Users/flavio/projects/openheal/inbodyS10_frontend/public\";\n        // carregar a imagem\n        const newImageBuffer = (0,canvas__WEBPACK_IMPORTED_MODULE_0__.loadImage)(dir + `/folha_result_inbody_s10.jpg`).then((image)=>{\n            const canvas = (0,canvas__WEBPACK_IMPORTED_MODULE_0__.createCanvas)(width, height);\n            const ctx = canvas.getContext(`2d`);\n            // desenhar a imagem no canvas\n            ctx.drawImage(image, 0, 0, width, height);\n            const x = width;\n            const y = height;\n            const fontSize = 0.009 * y;\n            const font = `${fontSize}px Arial`;\n            const fontNameSize = 0.012 * y;\n            const fontName = `${fontNameSize}px Arial`;\n            const fontTxtSize = 0.007 * y;\n            const fontTxt = `${fontTxtSize}px Arial`;\n            const insertText = (x, y, text, font, colorCode)=>{\n                //console.log(x, y, text, font, colorCode)\n                ctx.font = font;\n                ctx.fillStyle = this.getColor(colorCode);\n                ctx.fillText(text, x, y);\n            };\n            // # Add Text to an image\n            // # Lines\n            const relLines = positions[`relLines`];\n            const lines = relLines.map((i)=>i * y);\n            const relLinesTxt = positions[`relLinesTxt`];\n            const linesTxt = relLinesTxt.map((i)=>i * y);\n            // # Columns\n            const relColumn0 = positions[`relColumn0`];\n            const column0 = relColumn0.map((i)=>i * x);\n            const relColumn1 = positions[`relColumn1`];\n            const column1 = relColumn1.map((i)=>i * x);\n            const relColumn2 = positions[`relColumn2`];\n            const column2 = relColumn2.map((i)=>i * x);\n            const relColumnBar = positions[`relColumnBar`];\n            const columnBar = relColumnBar.map((i)=>i * x);\n            const relColumnTxt = positions[`relColumnTxt`];\n            const columnTxt = relColumnTxt.map((i)=>i * x);\n            // # Text Lines\n            const texts = this.getTexts();\n            //Name\n            insertText(column0[0], lines[0], this.name, fontName, `std`);\n            //# Ids\n            insertText(column1[0], lines[1], this.bioimpedance.id, fontTxt, `std`);\n            insertText(column1[1], lines[1], `${this.bioimpedance.height} cm`, font, `std`);\n            insertText(column1[2], lines[1], this.bioimpedance.date_times, font, `std`);\n            insertText(column1[0], lines[2], `${this.bioimpedance.age} anos`, font, `std`);\n            insertText(column1[1], lines[2], this.bioimpedance.sex, font, `std`);\n            //# Corporal Composition Analisis\n            insertText(column2[0], lines[3], `litros`, font, `std`);\n            insertText(column2[1], lines[3], this.bioimpedance.icw, font, this.icw);\n            insertText(column2[2], lines[3], `${this.bioimpedance.icw_min} - ${this.bioimpedance.icw_max}`, font, `std`);\n            insertText(column2[0], lines[4], `litros`, font, `std`);\n            insertText(column2[1], lines[4], this.bioimpedance.ecw, font, this.cat_ECW);\n            insertText(column2[2], lines[4], `${this.bioimpedance.ecw_min} - ${this.bioimpedance.ecw_max}`, font, `std`);\n            insertText(column2[3], lines[4], this.bioimpedance.tbw_total_body_water, font, `std`);\n            insertText(column2[0], lines[5], `Kg`, font, `std`);\n            insertText(column2[1], lines[5], this.bioimpedance.protein, font, this.cat_protein);\n            insertText(column2[2], lines[5], `${this.bioimpedance.protein_min} - ${this.bioimpedance.protein_max}`, font, `std`);\n            insertText(column2[4], lines[5], this.bioimpedance.slm_soft_lean_mass, font, `std`);\n            insertText(column2[0], lines[6], `Kg`, font, `std`);\n            insertText(column2[1], lines[6], this.bioimpedance.mineral, font, this.cat_mineral);\n            insertText(column2[2], lines[6], `${this.bioimpedance.mineral_min} - ${this.bioimpedance.mineral_max}`, font, `std`);\n            insertText(column2[5], lines[6], this.bioimpedance.ffm_fat_free_mass, font, `std`);\n            insertText(column2[0], lines[7], `Kg`, font, `std`);\n            insertText(column2[1], lines[7], this.bioimpedance.fat, font, this.cat_fat);\n            insertText(column2[2], lines[7], `${this.bioimpedance.fat_min} - ${this.bioimpedance.fat_max}`, font, `std`);\n            insertText(column2[6], lines[7], this.bioimpedance.weight, font, `std`);\n            //Fat - muscle analisis\n            insertText(column2[0], lines[8], `Kg`, font, `std`);\n            insertText(column2[1], lines[8], this.bioimpedance.weight, font, `std`);\n            insertText(column2[2], lines[8], `${this.bioimpedance.weight_min} - ${this.bioimpedance.weight_max}`, font, `std`);\n            insertText(columnBar[0], lines[8], this.getBars(this.cat_weight), font, `std`);\n            insertText(column2[0], lines[9], `Kg`, font, `std`);\n            insertText(column2[1], lines[9], this.bioimpedance.smm_skeletal_muscle_mass, font, this.cat_smm);\n            insertText(column2[2], lines[9], `${this.bioimpedance.smm_min} - ${this.bioimpedance.smm_max}`, font, `std`);\n            insertText(columnBar[0], lines[9], this.getBars(this.cat_smm), font, `std`);\n            insertText(column2[0], lines[10], `Kg`, font, `std`);\n            insertText(column2[1], lines[10], this.bioimpedance.fat, font, this.cat_fat);\n            insertText(column2[2], lines[10], `${this.bioimpedance.fat_min} - ${this.bioimpedance.fat_max}`, font, `std`);\n            insertText(columnBar[0], lines[10], this.getBars(this.cat_fat), font, `std`);\n            insertText(column2[0], lines[11], `%`, font, `std`);\n            insertText(column2[1], lines[11], this.bioimpedance.pbf_percent_body_fat, font, this.cat_pbf);\n            insertText(column2[2], lines[11], `${this.bioimpedance.pbf_min} - ${this.bioimpedance.pbf_max}`, font, `std`);\n            insertText(columnBar[0], lines[11], this.getBars(this.cat_pbf), font, `std`);\n            insertText(column2[0], lines[12], `Kg/m2`, font, `std`);\n            insertText(column2[1], lines[12], this.bioimpedance.bmi, font, `std`);\n            insertText(column2[2], lines[12], `${this.bioimpedance.bmi_min} - ${this.bioimpedance.bmi_max}`, font, `std`);\n            insertText(columnBar[0], lines[12], ``, font, `std`);\n            // segmentar analisis\n            insertText(column2[0], lines[13], `kg`, font, `std`);\n            insertText(column2[1], lines[13], this.bioimpedance.segmental_lean_la, font, this.cat_segmental_lean_la);\n            insertText(column2[2], lines[13], `${this.bioimpedance.segmental_lean_la_min} - ${this.bioimpedance.segmental_lean_la_max}`, font, `std`);\n            insertText(columnBar[0], lines[13], this.getBars(this.cat_segmental_lean_la), font, `std`);\n            insertText(column2[0], lines[14], `kg`, font, `std`);\n            insertText(column2[1], lines[14], this.bioimpedance.segmental_lean_la, font, this.cat_segmental_lean_la);\n            insertText(column2[2], lines[14], `${this.bioimpedance.segmental_lean_la_min} - ${this.bioimpedance.segmental_lean_la_max}`, font, `std`);\n            insertText(columnBar[0], lines[14], this.getBars(this.cat_segmental_lean_la), font, `std`);\n            insertText(column2[0], lines[15], `kg`, font, `std`);\n            insertText(column2[1], lines[15], this.bioimpedance.segmental_lean_tr, font, this.cat_segmental_lean_tr);\n            insertText(column2[2], lines[15], `${this.bioimpedance.segmental_lean_tr_min} - ${this.bioimpedance.segmental_lean_tr_max}`, font, `std`);\n            insertText(columnBar[0], lines[15], this.getBars(this.cat_segmental_lean_tr), font, `std`);\n            insertText(column2[0], lines[16], `kg`, font, `std`);\n            insertText(column2[1], lines[16], this.bioimpedance.segmental_lean_rl, font, this.cat_segmental_lean_rl);\n            insertText(column2[2], lines[16], `${this.bioimpedance.segmental_lean_rl_min} - ${this.bioimpedance.segmental_lean_rl_max}`, font, `std`);\n            insertText(columnBar[0], lines[16], this.getBars(this.cat_segmental_lean_rl), font, `std`);\n            insertText(column2[0], lines[17], `kg`, font, `std`);\n            insertText(column2[1], lines[17], this.bioimpedance.segmental_lean_ll, font, this.cat_segmental_lean_ll);\n            insertText(column2[2], lines[17], `${this.bioimpedance.segmental_lean_ll_min} - ${this.bioimpedance.segmental_lean_ll_max}`, font, `std`);\n            insertText(columnBar[0], lines[17], this.getBars(this.cat_segmental_lean_ll), font, `std`);\n            // Text line by line\n            const concatText = (numLines)=>{\n                for(let i = 0; i < numLines; i++){\n                    insertText(columnTxt[0], linesTxt[i], texts[i], fontTxt, `std`);\n                }\n            };\n            concatText(27);\n            const finalImageBuffer = canvas.toBuffer(\"image/jpeg\");\n            return finalImageBuffer;\n        }).catch((err)=>{\n            console.log(err);\n        });\n        return newImageBuffer;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./classes/bioimpedance/BioReport.tsx\n");

/***/ }),

/***/ "(api)/./classes/bioimpedance/Bioimpendance.tsx":
/*!************************************************!*\
  !*** ./classes/bioimpedance/Bioimpendance.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Bioimpedance)\n/* harmony export */ });\nclass Bioimpedance {\n    constructor(row){\n        this.rowId = row[\"rowId\"];\n        this.date_times = row[\"1.DATE&TIMES\"];\n        this.id = row[\"2.ID\"];\n        this.age = row[\"3.AGE\"];\n        this.height = row[\"4.HEIGHT\"];\n        this.sex = (row[\"5.SEX\"] ?? row[\"5.GENDER\"]) === \"0\" ? \"Masculino\" : \"Feminino\";\n        this.weight = row[\"6.WEIGHT\"];\n        this.weight_min = row[\"7.WEIGHT_MIN\"];\n        this.weight_max = row[\"8.WEIGHT_MAX\"];\n        this.icw = row[\"9.ICW\"];\n        this.icw_min = row[\"10.ICW_MIN\"];\n        this.icw_max = row[\"11.ICW_MAX\"];\n        this.ecw = row[\"12.ECW\"];\n        this.ecw_min = row[\"13.ECW_MIN\"];\n        this.ecw_max = row[\"14.ECW_MAX\"];\n        this.tbw_total_body_water = row[\"15.TBW(Total Body Water)\"];\n        this.tbw_min = row[\"16.TBW_MIN\"];\n        this.tbw_max = row[\"17.TBW_MAX\"];\n        this.protein = row[\"18.Protein\"];\n        this.protein_min = row[\"19.Protein_MIN\"];\n        this.protein_max = row[\"20.Protein_MAX\"];\n        this.mineral = row[\"21.Mineral\"];\n        this.mineral_min = row[\"22.Mineral_MIN\"];\n        this.mineral_max = row[\"23.Mineral_MAX\"];\n        this.fat = row[\"24.Fat\"];\n        this.fat_min = row[\"25.Fat_MIN\"];\n        this.fat_max = row[\"26.Fat_MAX\"];\n        this.slm_soft_lean_mass = row[\"27.SLM(Soft Lean Mass)\"];\n        this.slm_min = row[\"28.SLM_MIN\"];\n        this.slm_max = row[\"29.SLM_MAX\"];\n        this.ffm_fat_free_mass = row[\"30.FFM(Fat Free Mass)\"];\n        this.ffm_min = row[\"31.ffm_min\"];\n        this.ffm_max = row[\"32.FFM_MAX\"];\n        this.smm_skeletal_muscle_mass = row[\"33.SMM(Skeletal Muscle Mass)\"];\n        this.smm_min = row[\"34.SMM_MIN\"];\n        this.smm_max = row[\"35.SMM_MAX\"];\n        this.pbf_percent_body_fat = row[\"36.PBF(Percent Body Fat)\"];\n        this.pbf_min = row[\"37.PBF_MIN\"];\n        this.pbf_max = row[\"38.PBF_MAX\"];\n        this.bmi = row[\"39.BMI\"];\n        this.bmi_min = row[\"40.BMI_MIN\"];\n        this.bmi_max = row[\"41.BMI_MAX\"];\n        this.segmental_water_ra = row[\"42.Segmental Water(RA)\"];\n        this.segmental_water_ra_min = row[\"43.Segmental Water(RA)_MIN\"];\n        this.segmental_water_ra_max = row[\"44.Segmental Water(RA)_MAX\"];\n        this.segmental_water_la = row[\"45.Segmental Water(LA)\"];\n        this.segmental_water_la_min = row[\"46.Segmental Water(LA)_MIN\"];\n        this.segmental_water_la_max = row[\"47.Segmental Water(LA)_MAX\"];\n        this.segmental_water_tr = row[\"48.Segmental Water(TR)\"];\n        this.segmental_water_tr_min = row[\"49.Segmental Water(TR)_MIN\"];\n        this.segmental_water_tr_max = row[\"50.Segmental Water(TR)_MAX\"];\n        this.segmental_water_rl = row[\"51.Segmental Water(RL)\"];\n        this.segmental_water_rl_min = row[\"52.Segmental Water(RL)_MIN\"];\n        this.segmental_water_rl_max = row[\"53.Segmental Water(RL)_MAX\"];\n        this.segmental_water_ll = row[\"54.Segmental Water(LL)\"];\n        this.segmental_water_ll_min = row[\"55.Segmental Water(LL)_MIN\"];\n        this.segmental_water_ll_max = row[\"56.Segmental Water(LL)_MAX\"];\n        this.ecw_tbw_total = row[\"57.ECW/TBW(Total)\"];\n        this.ecw_tbw_ra = row[\"58.ECW/TBW(RA)\"];\n        this.ecw_tbw_la = row[\"59.ECW/TBW(LA)\"];\n        this.ecw_tbw_tr = row[\"60.ECW/TBW(TR)\"];\n        this.ecw_tbw_rl = row[\"61.ECW/TBW(RL)\"];\n        this.ecw_tbw_ll = row[\"62.ECW/TBW(LL)\"];\n        this.segmental_lean_ra = row[\"63.Segmental Lean(RA)\"];\n        this.segmental_lean_ra_min = row[\"64.Segmental Lean(RA)_MIN\"];\n        this.segmental_lean_ra_max = row[\"65.Segmental Lean(RA)_MAX\"];\n        this.segmental_lean_la = row[\"66.Segmental Lean(LA)\"];\n        this.segmental_lean_la_min = row[\"67.Segmental Lean(LA)_MIN\"];\n        this.segmental_lean_la_max = row[\"68.Segmental Lean(LA)_MAX\"];\n        this.segmental_lean_tr = row[\"69.Segmental Lean(TR)\"];\n        this.segmental_lean_tr_min = row[\"70.Segmental Lean(TR)_MIN\"];\n        this.segmental_lean_tr_max = row[\"71.Segmental Lean(TR)_MAX\"];\n        this.segmental_lean_rl = row[\"72.Segmental Lean(RL)\"];\n        this.segmental_lean_rl_min = row[\"73.Segmental Lean(RL)_MIN\"];\n        this.segmental_lean_rl_max = row[\"74.Segmental Lean(RL)_MAX\"];\n        this.segmental_lean_ll = row[\"75.Segmental Lean(LL)\"];\n        this.segmental_lean_ll_min = row[\"76.Segmental Lean(LL)_MIN\"];\n        this.segmental_lean_ll_max = row[\"77.Segmental Lean(LL)_MAX\"];\n        this.body_cell_mass = row[\"78.Body Cell Mass\"];\n        this.bcm_min = row[\"79.BCM_MIN\"];\n        this.bcm_max = row[\"80.BCM_MAX\"];\n        this.bone_mineral_contents = row[\"81.Bone Mineral Contents\"];\n        this.bmc_min = row[\"82.BMC_MIN\"];\n        this.bmc_max = row[\"83.BMC_MAX\"];\n        this.ac = row[\"84.AC\"];\n        this.amc = row[\"85.AMC\"];\n        this.waist_cir = row[\"86.Waist Cir.\"];\n        this.vfa = row[\"87.VFA\"];\n        this.bmr = row[\"88.BMR\"];\n        this.tbw_ffm = row[\"89.TBW/FFM\"];\n        this._1khz_ra_impedance = row[\"90.1khz-RA Impedance\"];\n        this._1khz_la_impedance = row[\"91.1khz-LA Impedance\"];\n        this._1khz_tr_impedance = row[\"92.1khz-TR Impedance\"];\n        this._1khz_rl_impedance = row[\"93.1khz-RL Impedance\"];\n        this._1khz_ll_impedance = row[\"94.1khz-LL Impedance\"];\n        this._5khz_ra_impedance = row[\"95.5khz-RA Impedance\"];\n        this._5khz_la_impedance = row[\"96.5khz-LA Impedance\"];\n        this._5khz_tr_impedance = row[\"97.5khz-TR Impedance\"];\n        this._5khz_rl_impedance = row[\"98.5khz-RL Impedance\"];\n        this._5khz_ll_impedance = row[\"99.5khz-LL Impedance\"];\n        this._50khz_ra_impedance = row[\"100.50khz-RA Impedance\"];\n        this._50khz_la_impedance = row[\"101.50khz-LA Impedance\"];\n        this._50khz_tr_impedance = row[\"102.50khz-TR Impedance\"];\n        this._50khz_rl_impedance = row[\"103.50khz-RL Impedance\"];\n        this._50khz_ll_impedance = row[\"104.50khz-LL Impedance\"];\n        this._250khz_ra_impedance = row[\"105.250khz-RA Impedance\"];\n        this._250khz_la_impedance = row[\"106.250khz-LA Impedance\"];\n        this._250khz_tr_impedance = row[\"107.250khz-TR Impedance\"];\n        this._250khz_rl_impedance = row[\"108.250khz-RL Impedance\"];\n        this._250khz_ll_impedance = row[\"109.250khz-LL Impedance\"];\n        this._500khz_ra_impedance = row[\"110.500khz-RA Impedance\"];\n        this._500khz_la_impedance = row[\"111.500khz-LA Impedance\"];\n        this._500khz_tr_impedance = row[\"112.500khz-TR Impedance\"];\n        this._500khz_rl_impedance = row[\"113.500khz-RL Impedance\"];\n        this._500khz_ll_impedance = row[\"114.500khz-LL Impedance\"];\n        this._1mhz_ra_impedance = row[\"115.1Mhz-RA Impedance\"];\n        this._1mhz_la_impedance = row[\"116.1Mhz-LA Impedance\"];\n        this._1mhz_tr_impedance = row[\"117.1Mhz-TR Impedance\"];\n        this._1mhz_rl_impedance = row[\"118.1Mhz-RL Impedance\"];\n        this._1mhz_ll_impedance = row[\"119.1Mhz-LL Impedance\"];\n        this._5khz_ra_reactance = row[\"120.5khz-RA Reactance\"];\n        this._5khz_la_reactance = row[\"121.5khz-LA Reactance\"];\n        this._5khz_tr_reactance = row[\"122.5khz-TR Reactance\"];\n        this._5khz_rl_reactance = row[\"123.5khz-RL Reactance\"];\n        this._5khz_ll_reactance = row[\"124.5khz-LL Reactance\"];\n        this._50khz_ra_reactance = row[\"125.50khz-RA Reactance\"];\n        this._50khz_la_reactance = row[\"126.50khz-LA Reactance\"];\n        this._50khz_tr_reactance = row[\"127.50khz-TR Reactance\"];\n        this._50khz_rl_reactance = row[\"128.50khz-RL Reactance\"];\n        this._50khz_ll_reactance = row[\"129.50khz-LL Reactance\"];\n        this._250khz_ra_reactance = row[\"130.250khz-RA Reactance\"];\n        this._250khz_la_reactance = row[\"131.250khz-LA Reactance\"];\n        this._250khz_tr_reactance = row[\"132.250khz-TR Reactance\"];\n        this._250khz_rl_reactance = row[\"133.250khz-RL Reactance\"];\n        this._250khz_ll_reactance = row[\"134.250khz-LL Reactance\"];\n        this._5khz_ra_phase_angle = row[\"135.5khz-RA Phase Angle\"];\n        this._5khz_la_phase_angle = row[\"136.5khz-LA Phase Angle\"];\n        this._5khz_tr_phase_angle = row[\"137.5khz-TR Phase Angle\"];\n        this._5khz_rl_phase_angle = row[\"138.5khz-RL Phase Angle\"];\n        this._5khz_ll_phase_angle = row[\"139.5khz-LL Phase Angle\"];\n        this._50khz_ra_phase_angle = row[\"140.50khz-RA Phase Angle\"];\n        this._50khz_la_phase_angle = row[\"141.50khz-LA Phase Angle\"];\n        this._50khz_tr_phase_angle = row[\"142.50khz-TR Phase Angle\"];\n        this._50khz_rl_phase_angle = row[\"143.50khz-RL Phase Angle\"];\n        this._50khz_ll_phase_angle = row[\"144.50khz-LL Phase Angle\"];\n        this._250khz_ra_phase_angle = row[\"145.250khz-RA Phase Angle\"];\n        this._250khz_la_phase_angle = row[\"146.250khz-LA Phase Angle\"];\n        this._250khz_tr_phase_angle = row[\"147.250khz-TR Phase Angle\"];\n        this._250khz_rl_phase_angle = row[\"148.250khz-RL Phase Angle\"];\n        this._250khz_ll_phase_angle = row[\"149.250khz-LL Phase Angle\"];\n        this.systolic = row[\"150.Systolic\"];\n        this.diastolic = row[\"151.Diastolic\"];\n        this.heart_rate = row[\"152.Heart Rate\"];\n        this.electrode = row[\"153.Electrode\"];\n        this.posture = row[\"154.Posture\"];\n        this.access = row[\"155.Access\"];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./classes/bioimpedance/Bioimpendance.tsx\n");

/***/ }),

/***/ "(api)/./lib/ApiInbodyS10JsonHandler.ts":
/*!****************************************!*\
  !*** ./lib/ApiInbodyS10JsonHandler.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ApiInbodyS10JsonHandler)\n/* harmony export */ });\n/* harmony import */ var classes_bioimpedance_Bioimpendance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classes/bioimpedance/Bioimpendance */ \"(api)/./classes/bioimpedance/Bioimpendance.tsx\");\n/* harmony import */ var classes_bioimpedance_BioReport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classes/bioimpedance/BioReport */ \"(api)/./classes/bioimpedance/BioReport.tsx\");\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdf-lib */ \"pdf-lib\");\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pdf_lib__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nasync function ApiInbodyS10JsonHandler(requestedJson) {\n    const { name , selectedRows  } = requestedJson;\n    const reportFiles = await Promise.all(selectedRows.map((row)=>{\n        const bioimpedance = new classes_bioimpedance_Bioimpendance__WEBPACK_IMPORTED_MODULE_0__[\"default\"](row);\n        const bioReport = new classes_bioimpedance_BioReport__WEBPACK_IMPORTED_MODULE_1__[\"default\"](bioimpedance, \"pt\", name);\n        return bioReport.getCanvas(1000, 2000);\n    }));\n    // Cria um novo documento PDF\n    const pdfDoc = await pdf_lib__WEBPACK_IMPORTED_MODULE_2__.PDFDocument.create();\n    await Promise.all(reportFiles.map(async (reportFile)=>{\n        // Adiciona a primeira imagem ao documento PDF\n        const image = await pdfDoc.embedJpg(reportFile);\n        const page = pdfDoc.addPage();\n        const { width: pageWidth , height: pageHeight  } = page.getSize();\n        page.drawImage(image, {\n            x: 0,\n            y: 0,\n            width: pageWidth,\n            height: pageHeight\n        });\n        return page;\n    }));\n    const pdfBytes = await pdfDoc.save();\n    return Buffer.from(pdfBytes);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvQXBpSW5ib2R5UzEwSnNvbkhhbmRsZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOEQ7QUFDUDtBQUNqQjtBQUt2QixlQUFlRyx3QkFBd0JDLGFBQWEsRUFBRTtJQUdqRSxNQUFNLEVBQUVDLEtBQUksRUFBRUMsYUFBWSxFQUFFLEdBQUdGO0lBRS9CLE1BQU1HLGNBQWMsTUFBTUMsUUFBUUMsR0FBRyxDQUFDSCxhQUFhSSxHQUFHLENBQUMsQ0FBQ0MsTUFBUTtRQUM1RCxNQUFNQyxlQUFlLElBQUlaLDBFQUFZQSxDQUFDVztRQUN0QyxNQUFNRSxZQUFZLElBQUlaLHNFQUFTQSxDQUFDVyxjQUFjLE1BQU1QO1FBQ3BELE9BQU9RLFVBQVVDLFNBQVMsQ0FBQyxNQUFNO0lBQ3JDO0lBRUEsNkJBQTZCO0lBQzdCLE1BQU1DLFNBQVMsTUFBTWIsdURBQWtCO0lBRXZDLE1BQU1NLFFBQVFDLEdBQUcsQ0FBQ0YsWUFBWUcsR0FBRyxDQUFDLE9BQU9PLGFBQWU7UUFFcEQsOENBQThDO1FBQzlDLE1BQU1DLFFBQVEsTUFBTUgsT0FBT0ksUUFBUSxDQUFDRjtRQUNwQyxNQUFNRyxPQUFPTCxPQUFPTSxPQUFPO1FBQzNCLE1BQU0sRUFBRUMsT0FBT0MsVUFBUyxFQUFFQyxRQUFRQyxXQUFVLEVBQUUsR0FBR0wsS0FBS00sT0FBTztRQUM3RE4sS0FBS08sU0FBUyxDQUFDVCxPQUFPO1lBQ2xCVSxHQUFHO1lBQ0hDLEdBQUc7WUFDSFAsT0FBT0M7WUFDUEMsUUFBUUM7UUFDWjtRQUNBLE9BQU9MO0lBQ1g7SUFFQSxNQUFNVSxXQUFXLE1BQU1mLE9BQU9nQixJQUFJO0lBRWxDLE9BQU9DLE9BQU9DLElBQUksQ0FBQ0g7QUFFdkIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2luYm9keXMxMF9mcm9udGVuZC8uL2xpYi9BcGlJbmJvZHlTMTBKc29uSGFuZGxlci50cz8xYjZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCaW9pbXBlZGFuY2UgZnJvbSBcImNsYXNzZXMvYmlvaW1wZWRhbmNlL0Jpb2ltcGVuZGFuY2VcIjtcbmltcG9ydCBCaW9SZXBvcnQgZnJvbSBcImNsYXNzZXMvYmlvaW1wZWRhbmNlL0Jpb1JlcG9ydFwiO1xuaW1wb3J0IHsgUERGRG9jdW1lbnQgfSBmcm9tICdwZGYtbGliJztcblxuXG5cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gQXBpSW5ib2R5UzEwSnNvbkhhbmRsZXIocmVxdWVzdGVkSnNvbikge1xuXG5cbiAgICBjb25zdCB7IG5hbWUsIHNlbGVjdGVkUm93cyB9ID0gcmVxdWVzdGVkSnNvblxuXG4gICAgY29uc3QgcmVwb3J0RmlsZXMgPSBhd2FpdCBQcm9taXNlLmFsbChzZWxlY3RlZFJvd3MubWFwKChyb3cpID0+IHtcbiAgICAgICAgY29uc3QgYmlvaW1wZWRhbmNlID0gbmV3IEJpb2ltcGVkYW5jZShyb3cpXG4gICAgICAgIGNvbnN0IGJpb1JlcG9ydCA9IG5ldyBCaW9SZXBvcnQoYmlvaW1wZWRhbmNlLCBcInB0XCIsIG5hbWUpXG4gICAgICAgIHJldHVybiBiaW9SZXBvcnQuZ2V0Q2FudmFzKDEwMDAsIDIwMDApXG4gICAgfSkpXG5cbiAgICAvLyBDcmlhIHVtIG5vdm8gZG9jdW1lbnRvIFBERlxuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmNyZWF0ZSgpO1xuXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwocmVwb3J0RmlsZXMubWFwKGFzeW5jIChyZXBvcnRGaWxlKSA9PiB7XG5cbiAgICAgICAgLy8gQWRpY2lvbmEgYSBwcmltZWlyYSBpbWFnZW0gYW8gZG9jdW1lbnRvIFBERlxuICAgICAgICBjb25zdCBpbWFnZSA9IGF3YWl0IHBkZkRvYy5lbWJlZEpwZyhyZXBvcnRGaWxlKTtcbiAgICAgICAgY29uc3QgcGFnZSA9IHBkZkRvYy5hZGRQYWdlKCk7XG4gICAgICAgIGNvbnN0IHsgd2lkdGg6IHBhZ2VXaWR0aCwgaGVpZ2h0OiBwYWdlSGVpZ2h0IH0gPSBwYWdlLmdldFNpemUoKTtcbiAgICAgICAgcGFnZS5kcmF3SW1hZ2UoaW1hZ2UsIHtcbiAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICB5OiAwLFxuICAgICAgICAgICAgd2lkdGg6IHBhZ2VXaWR0aCxcbiAgICAgICAgICAgIGhlaWdodDogcGFnZUhlaWdodCxcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHBhZ2U7XG4gICAgfSkpXG5cbiAgICBjb25zdCBwZGZCeXRlcyA9IGF3YWl0IHBkZkRvYy5zYXZlKCk7XG5cbiAgICByZXR1cm4gQnVmZmVyLmZyb20ocGRmQnl0ZXMpXG5cbn1cbiJdLCJuYW1lcyI6WyJCaW9pbXBlZGFuY2UiLCJCaW9SZXBvcnQiLCJQREZEb2N1bWVudCIsIkFwaUluYm9keVMxMEpzb25IYW5kbGVyIiwicmVxdWVzdGVkSnNvbiIsIm5hbWUiLCJzZWxlY3RlZFJvd3MiLCJyZXBvcnRGaWxlcyIsIlByb21pc2UiLCJhbGwiLCJtYXAiLCJyb3ciLCJiaW9pbXBlZGFuY2UiLCJiaW9SZXBvcnQiLCJnZXRDYW52YXMiLCJwZGZEb2MiLCJjcmVhdGUiLCJyZXBvcnRGaWxlIiwiaW1hZ2UiLCJlbWJlZEpwZyIsInBhZ2UiLCJhZGRQYWdlIiwid2lkdGgiLCJwYWdlV2lkdGgiLCJoZWlnaHQiLCJwYWdlSGVpZ2h0IiwiZ2V0U2l6ZSIsImRyYXdJbWFnZSIsIngiLCJ5IiwicGRmQnl0ZXMiLCJzYXZlIiwiQnVmZmVyIiwiZnJvbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/ApiInbodyS10JsonHandler.ts\n");

/***/ }),

/***/ "(api)/./pages/api/inbodyS10.ts":
/*!********************************!*\
  !*** ./pages/api/inbodyS10.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_ApiInbodyS10JsonHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/ApiInbodyS10JsonHandler */ \"(api)/./lib/ApiInbodyS10JsonHandler.ts\");\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(400).json({\n            message: \"Something went wrong\"\n        });\n    }\n    const pdfBuffer = await (0,_lib_ApiInbodyS10JsonHandler__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(req.body);\n    res.setHeader(\"Content-Type\", \"application/pdf\");\n    res.setHeader(\"Content-Disposition\", 'attachment; filename=\"pdf-file.pdf\"');\n    res.status(200).send(pdfBuffer);\n}\nconst config = {\n    api: {\n        responseLimit: false\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvaW5ib2R5UzEwLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUN1RTtBQUd4RCxlQUFlQyxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQixFQUFFO0lBQzdFLElBQUlELElBQUlFLE1BQU0sS0FBSyxRQUFRO1FBQ3ZCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBUztRQUF1QjtJQUNsRSxDQUFDO0lBRUQsTUFBTUMsWUFBWSxNQUFNUix3RUFBdUJBLENBQUNFLElBQUlPLElBQUk7SUFFeEROLElBQUlPLFNBQVMsQ0FBQyxnQkFBZ0I7SUFDOUJQLElBQUlPLFNBQVMsQ0FBQyx1QkFBdUI7SUFDckNQLElBQUlFLE1BQU0sQ0FBQyxLQUFLTSxJQUFJLENBQUNIO0FBQ3pCLENBQUM7QUFFTSxNQUFNSSxTQUFTO0lBQ2xCQyxLQUFLO1FBQ0RDLGVBQWUsS0FBSztJQUV4QjtBQUNKLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbmJvZHlzMTBfZnJvbnRlbmQvLi9wYWdlcy9hcGkvaW5ib2R5UzEwLnRzPzdjYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gXCJuZXh0XCJcbmltcG9ydCBBcGlJbmJvZHlTMTBKc29uSGFuZGxlciBmcm9tIFwiLi4vLi4vbGliL0FwaUluYm9keVMxMEpzb25IYW5kbGVyXCJcblxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XG4gICAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnU29tZXRoaW5nIHdlbnQgd3JvbmcnIH0pXG4gICAgfVxuXG4gICAgY29uc3QgcGRmQnVmZmVyID0gYXdhaXQgQXBpSW5ib2R5UzEwSnNvbkhhbmRsZXIocmVxLmJvZHkpO1xuXG4gICAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL3BkZicpO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtRGlzcG9zaXRpb24nLCAnYXR0YWNobWVudDsgZmlsZW5hbWU9XCJwZGYtZmlsZS5wZGZcIicpO1xuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHBkZkJ1ZmZlcik7XG59XG5cbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gICAgYXBpOiB7XG4gICAgICAgIHJlc3BvbnNlTGltaXQ6IGZhbHNlLFxuXG4gICAgfVxufSJdLCJuYW1lcyI6WyJBcGlJbmJvZHlTMTBKc29uSGFuZGxlciIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsInBkZkJ1ZmZlciIsImJvZHkiLCJzZXRIZWFkZXIiLCJzZW5kIiwiY29uZmlnIiwiYXBpIiwicmVzcG9uc2VMaW1pdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/inbodyS10.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/inbodyS10.ts"));
module.exports = __webpack_exports__;

})();